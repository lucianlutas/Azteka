<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_control</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
image_speed = 0;

slabs = global.slabs;
height = global.height;
block = -1;

go_left = 0;
go_right = 1;
can_place = 1;
time = 10;

raise_mount = 0;

scr_load();
lost = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.height++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(time &gt; 0){
    if(can_place == 0){
        time --;
        //show_debug_message(string(time));
        alarm[1] = room_speed;
    }else{
        alarm[1] = -1
        time = 10;
    }
} else{
    time = 0;
    lost = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(block != -1){
    block.phy_active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// controller input
if gamepad_button_check_pressed(0, gp_face1){ //  controller select
    if(can_place == 1 &amp;&amp; obj_globals.sec_left&gt;0){
        if(global.slabs &gt; 0){
            if(block != -1){
                obj_fail_point.y = block.y;
                xx = block.x;
                yy = block.y;
                instance_destroy(block);
                if (global.height &lt;= 20){ instance_create(xx, yy, obj_block_imovable);}
                else if (global.height&gt; 20 &amp;&amp; global.height &lt;=40){ instance_create(xx, yy, obj_block_imov_med);}
                else if (global.height &gt; 40){instance_create(xx, yy, obj_block_imov_small);}
                
            }
            //alarm[1] = room_speed;
            if (global.height &lt;= 19){ block = instance_create(x, y+50, obj_block);}
            else if (global.height &gt; 19 &amp;&amp; global.height &lt;= 39){ block = instance_create(x, y+50, obj_block_med);}
            else if (global.height &gt; 39){block = instance_create(x, y+50, obj_block_small);}
            block.shake = 0;
            //height++;
            show_debug_message("pressed");
            
            
            
            if(global.height &gt;= 1){
                //y -= 87;
                TweenFire(self, y__, EaseInOutQuad, TWEEN_MODE_ONCE, false, 0, 30, y, y-87);
                //view_yview[0] -= 87;
                //tween = TweenSimpleMove(view_xview[0], view_yview[0], view_xview[0], view_yview[0] - 87, 30, EaseInOutQuad);
                with(obj_mountains){
                    TweenFire(self, y__, EaseInOutQuad, TWEEN_MODE_ONCE, false, 0, 30, y, y-50);
                }
                raise_mount = 1;
                var _view = 0;
                TweenFire(id, ext_view_yview__, EaseInOutQuad, TWEEN_MODE_ONCE, false, 0, 30, view_yview[0], view_yview[0]-87, _view);
                //background_y[2] -= 45;
            }
        global.slabs --;
        can_place = 0;
        } else{
            instance_create(view_xview[0]+view_wview[0]/2, view_yview[0]+view_hview[0]/2, obj_no_slabs);
        }
    }
    
    raise_mount = 0;
}
if gamepad_button_check_pressed(0, gp_face2){ //  controller back
    if(obj_control.can_place == 1 &amp;&amp; obj_globals.sec_left&gt;0){
        scr_screen_fade(rm_level_sel);
        audio_play_sound(snd_back, 10, false);
    }
}


// mechanics

/*if(height &gt; 0){
    with(block){
        if(place_meeting(x, y, obj_ground)){
            other.lost = 1;
            
        }
    }
}*/

if(block!=-1){
    if(lost == 0 &amp;&amp; slabs &gt; 0 &amp;&amp; block.phy_position_x == block.phy_position_xprevious &amp;&amp; block.phy_position_y == block.phy_position_yprevious){
        can_place = 1;
    } else{
        can_place = 0;
    }
}

if(can_place == 1){
    image_index = 0;
} else{
    image_index = 1;
}

if(lost == 1){
    //show_debug_message('pulaaaaa');
}

if(x &gt;= room_width - sprite_width/2){
    x = room_width - sprite_width/2;
    go_left = 1;
    go_right = 0;
}
if(x &lt;= sprite_width/2){
    x = sprite_width/2;
    go_right = 1;
    go_left = 0;
}

if(go_right == 1){
    x+=20;
}
if(go_left == 1){
    x-=20;
}


// colision with fail point
//if(height &gt; 0){
    if(instance_exists(block) &amp;&amp; (block.y &gt; obj_fail_point.y)){
        lost = 1;
        //show_debug_message('i passed through');
    }
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(block != -1){
        obj_fail_point.y = block.y;
        xx = block.x;
        yy = block.y;
        instance_destroy(block);
        if (global.height &lt;= 20){ instance_create(xx, yy, obj_block_imovable);}
        else if (global.height&gt; 20 &amp;&amp; global.height &lt;=40){ instance_create(xx, yy, obj_block_imov_med);}
        else if (global.height &gt; 40){instance_create(xx, yy, obj_block_imov_small);}
        
    }
scr_save();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_halign(fa_left);
draw_set_color(c_black);
draw_set_font(fnt_font);
//draw_text(10, 10, 'Height: ' + string(height) + ' | Slabs: ' + string(slabs));
draw_set_halign(fa_center);
if(lost == 1){
    draw_text(view_wview[0]/2, view_hview[0]/2, 'You lost');
} 
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(block!=-1){
    if(block.phy_position_x == block.phy_position_xprevious &amp;&amp; block.phy_position_y == block.phy_position_yprevious){
        block.phy_active = false;
    }
}*/

//show_debug_message('can place: ' + string(can_place) + ' | block: ' + string(block.id));

if(can_place == 1 &amp;&amp; obj_globals.sec_left&gt;0){
    if(global.slabs &gt; 0){
        if(block != -1){
            obj_fail_point.y = block.y;
            xx = block.x;
            yy = block.y;
            instance_destroy(block);
            if (global.height &lt;= 20){ instance_create(xx, yy, obj_block_imovable);}
            else if (global.height&gt; 20 &amp;&amp; global.height &lt;=40){ instance_create(xx, yy, obj_block_imov_med);}
            else if (global.height &gt; 40){instance_create(xx, yy, obj_block_imov_small);}
            
        }
        //alarm[1] = room_speed;
        if (global.height &lt;= 19){ block = instance_create(x, y+50, obj_block);}
        else if (global.height &gt; 19 &amp;&amp; global.height &lt;= 39){ block = instance_create(x, y+50, obj_block_med);}
        else if (global.height &gt; 39){block = instance_create(x, y+50, obj_block_small);}
        block.shake = 0;
        //height++;
        //show_debug_message("pressed");
        
        
        
        if(global.height &gt;= 1){
            //y -= 87;
            TweenFire(self, y__, EaseInOutQuad, TWEEN_MODE_ONCE, false, 0, 30, y, y-87);
            //view_yview[0] -= 87;
            //tween = TweenSimpleMove(view_xview[0], view_yview[0], view_xview[0], view_yview[0] - 87, 30, EaseInOutQuad);
            with(obj_mountains){
                TweenFire(self, y__, EaseInOutQuad, TWEEN_MODE_ONCE, false, 0, 30, y, y-50);
            }
            raise_mount = 1;
            var _view = 0;
            TweenFire(id, ext_view_yview__, EaseInOutQuad, TWEEN_MODE_ONCE, false, 0, 30, view_yview[0], view_yview[0]-87, _view);
            //background_y[2] -= 45;
        }
    global.slabs --;
    can_place = 0;
    } else{
        instance_create(view_xview[0]+view_wview[0]/2, view_yview[0]+view_hview[0]/2, obj_no_slabs);
    }
}

raise_mount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_control.can_place == 1 &amp;&amp; obj_globals.sec_left&gt;0){
        scr_screen_fade(rm_level_sel);
        audio_play_sound(snd_back, 10, false);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
