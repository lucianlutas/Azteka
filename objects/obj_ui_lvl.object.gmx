<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(1920, 1080);
if(gamepad_is_connected(0)){
    if(room == rm_menu){
        draw_sprite(spr_lvl_right, 1, display_get_gui_width(), display_get_gui_height());
    }
    if(room == rm_level_sel){
        draw_sprite(spr_lvl_right, 1, display_get_gui_width(), display_get_gui_height());
    }
    if(room == rm_rocks){
        draw_sprite(spr_ui_rock_right_x, -1, display_get_gui_width(), display_get_gui_height());
    }
    if(room == rm_slabs){
        draw_sprite(spr_cut_right, 1, display_get_gui_width(), display_get_gui_height());
    }
    if(room == rm_stack){
        draw_sprite(spr_drop_right, 1, display_get_gui_width(), display_get_gui_height());
    }
    if(room = rm_menu){
        draw_sprite(spr_quit, 1, 0, display_get_gui_height());
    } else if(room = rm_game_over){
        draw_sprite(spr_ui_menu, 1, 0, display_get_gui_height());
    } else{
        draw_sprite(spr_lvl_left, 1, 0, display_get_gui_height());
    }
} else{
    if(room == rm_menu){
        draw_sprite(spr_lvl_right, 0, display_get_gui_width(), display_get_gui_height());
    }
    if(room == rm_level_sel){
        draw_sprite(spr_lvl_right, 0, display_get_gui_width(), display_get_gui_height());
    }
    if(room == rm_rocks){
        draw_sprite(spr_ui_rock_right, -1, display_get_gui_width(), display_get_gui_height());
    }
    if(room == rm_slabs){
        draw_sprite(spr_cut_right, 0, display_get_gui_width(), display_get_gui_height());
    }
    if(room == rm_stack){
        draw_sprite(spr_drop_right, 0, display_get_gui_width(), display_get_gui_height());
    }
    if(room == rm_menu){
        draw_sprite(spr_quit, 0, 0, display_get_gui_height());
    } else if(room = rm_game_over){
        draw_sprite(spr_ui_menu, 0, 0, display_get_gui_height());
    }else{
        draw_sprite(spr_lvl_left, 0, 0, display_get_gui_height());
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
